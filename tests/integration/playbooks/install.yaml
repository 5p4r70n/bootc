---
- hosts: guest
  become: false
  vars:
    test_os: ""
    platform: "{{ lookup('env', 'PLATFORM') | default('aws', true) }}"
    test_image_url: ""

  tasks:
    - name: check bios or uefi
      stat:
        path: /sys/firmware/efi

    - name: check partition size
      command: df -Th
      ignore_errors: true
      become: true

    - name: check disk partition table
      command: fdisk -l
      ignore_errors: true
      become: true

    - name: check mount table
      command: findmnt
      ignore_errors: true

    # installing SELinux-enabled targets from SELinux-disabled hosts
    # https://github.com/containers/bootc/issues/419
    - name: disable selinux for libvirt only
      command: setenforce 0
      become: true
      ignore_errors: true
      when:
        - platform == "libvirt"

    - name: Install podman
      dnf:
        name:
          - podman
        state: present
      become: true
      when: ('rhel' not in test_os and test_os != 'fedora-41') or (platform != 'aws' and test_os != 'fedora-41')

    - name: Install podman from internal
      dnf:
        disablerepo: "*"
        enablerepo: "rhel-9y-*"
        name:
          - podman
        state: present
      become: true
      when:
        - "'rhel' in test_os"
        - platform == "aws"

    # ansible dnf5 module needs python3-libdnf5
    - name: Install podman on fedora-41(dnf5)
      command: dnf -y install podman
      become: true
      when: test_os == 'fedora-41'

    - name: Auth for RHEL private image
      command:
        podman login \
        -u "{{ lookup('env', 'QUAY_USERNAME') }}" \
        -p "{{ lookup('env', 'QUAY_PASSWORD') }}" \
        quay.io
      no_log: true
      become: true

    - name: Pull image
      command: "podman pull {{ test_image_url }}"
      become: true
      retries: 3
      delay: 10
      register: result
      until: result is successful

    - name: Install image
      command:
        "podman run \
         --rm \
         --privileged \
         --pid=host \
         -v /dev:/dev \
         -v /:/target \
         -v /var/lib/containers:/var/lib/containers \
         --security-opt label=type:unconfined_t \
         {{ test_image_url }} \
         bootc install to-existing-root"
      become: true

    - name: Reboot to deploy new system
      reboot:
        post_reboot_delay: 60
        reboot_timeout: 180
      become: true
      ignore_errors: true

    - name: Wait for connection to become reachable/usable
      wait_for_connection:
        delay: 30
